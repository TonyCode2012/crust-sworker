#!/bin/bash
function _store_meta()
{
    validate_file
    store_metadata
}

function seal_exit()
{
    rm $TMPFILE
}

########## MAIN BODY ##########
# basic variable
basedir=$(cd `dirname $0`;pwd)
instdir=$(cd $basedir/..;pwd)
scriptdir=$instdir/scripts
datadir=$instdir/data
testdir=$instdir/test_app
testfiledir=$testdir/files
configfile=$instdir/config/config.json
TMPFILE=$basedir/TMPFILE

trap 'seal_exit' EXIT

. $scriptdir/utils.sh

declare -A hash_2_use_m

data_arry=($(ls $datadir))
data_size=${#data_arry[@]}

srd_num=$(get_config ".functionality|.srd_size")
srd_paths=$(get_config ".functionality|.srd_paths")
srd_max_per_turn=$(get_config ".functionality|.srd_max_per_turn")
tmp_num=0

srd_disk_change "$srd_paths" "add"
while [ $tmp_num -lt $srd_num ]; do
    if [ $((srd_num - tmp_num)) -gt $srd_max_per_turn ]; then
        cur_turn=$srd_max_per_turn
    else
        cur_turn=$((srd_num - tmp_num))
    fi
    srd $cur_turn &>/dev/null
    if [ $? -ne 0 ]; then
        echo "srd failed!"
        exit 1
    fi
    ((tmp_num+=cur_turn))
done
_store_meta &>/dev/null
get_workload &>$TMPFILE
if [ x"$(cat $TMPFILE | jq '.srd|.space')" != x"$srd_num" ]; then
    echo "srd failed!Wrong result."
    exit 1
fi
